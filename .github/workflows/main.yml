name: Build
on: [push]
jobs:
  build:
      runs-on: ubuntu-latest
      services:
        postgres:
          image: postgres:13-alpine
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
            POSTGRES_PORT: 5432
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      steps:
        - uses: actions/checkout@v2

        - name: Set up Go
          uses: actions/setup-go@v2
          with:
            go-version: 1.15

        - name: Run
          env:
            # These are the expected envs in my code
            DB_HOST: localhost
            DB_USER: postgres
            DB_PASSWORD: postgres
            DB_NAME: postgres
            DB_PORT: 5432
            PORT: 8080
          run: make run
#   build:
#     needs: container-job
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v1

#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 11
#       - name: Build and analyze
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yseij_Koffie_Dranken
        
#       - name: Docker login
#         run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

#       - name: Docker Build
#         run: docker build -t ${{ secrets.DOCKER_USER }}/koffie_dranken:latest .

#       - name: Upload container to Docker Hub with Push
#         run: docker push ${{ secrets.DOCKER_USER }}/koffie_dranken:latest

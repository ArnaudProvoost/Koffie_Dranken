name: Build
on: [push]
jobs:
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
#           Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432          
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Run migrations
        run: psql -f Docker/init.sql postgresql://postgres:postgres@localhost:5432/postgres
      - name: Build
        run: go build -v .
      - name: Test
        run: go test -v .
        env: 
          DATABASE_DSN: "user=postgres host=localhost password=postgres port=5432 database=postgres sslmode=disable"
#   build:
#     needs: container-job
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v1

#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 11
#       - name: Build and analyze
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yseij_Koffie_Dranken
        
#       - name: Docker login
#         run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

#       - name: Docker Build
#         run: docker build -t ${{ secrets.DOCKER_USER }}/koffie_dranken:latest .

#       - name: Upload container to Docker Hub with Push
#         run: docker push ${{ secrets.DOCKER_USER }}/koffie_dranken:latest
